include /etc/nginx/imported/partials/before/*;

{% if NGINX_ENABLE_FASTCGI_CACHE|default('false') == 'true' %}
    fastcgi_cache_path /etc/nginx/cache levels=1:2 keys_zone=APPCACHE:100m inactive={{ NGINX_CACHE_TTL|default('10m') }};
{% endif %}

{% if NGINX_ENABLE_SSL|default('false') == 'true' %}
    server {
        server_name {{ NGINX_SERVER_NAME|default('_') }};

        listen {{ NGINX_HTTP_PORT|default('80') }};
        listen [::]:{{ NGINX_HTTP_PORT|default('80') }};

        {% if NGINX_PORT_IN_REDIRECT|default('on') == 'on' %}
            return 301 https://$host:{{ NGINX_HTTPS_PORT|default('443') }}$request_uri;
        {% else %}
            return 301 https://$host$request_uri;
        {% endif %}
    }
{% endif %}

{% if NGINX_SERVER_NAME|default('_') != '_' %}
    server {
        {% if NGINX_ENABLE_SSL|default('false') == 'true' %}
          listen {{ NGINX_HTTPS_PORT|default('443') }} ssl http2 default_server;
          listen [::]:{{ NGINX_HTTPS_PORT|default('443') }} ssl http2 default_server;

          ssl_dhparam  /etc/nginx/ssl/dhparam.pem;
          ssl_session_cache  builtin:1000  shared:SSL:10m;
          ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
          ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
          ssl_prefer_server_ciphers on;

          ssl_certificate {{ NGINX_SSL_CERT|default('/etc/nginx/ssl/self-signed.crt') }};
          ssl_certificate_key {{ NGINX_SSL_CERT_KEY|default('/etc/nginx/ssl/self-signed.key') }};
        {% else %}
          listen {{ NGINX_HTTP_PORT|default('80') }} default_server;
          listen [::]:{{ NGINX_HTTP_PORT|default('80') }} default_server;
        {% endif %}

        return 444;
    }

    {% set non_canonical = NGINX_NON_CANONICAL|default('') %}
    {% if non_canonical %}
        {% for hostname in non_canonical.split(',') %}
            server {
                server_name {{ hostname }};

                listen {{ NGINX_HTTP_PORT|default('80') }};
                listen [::]:{{ NGINX_HTTP_PORT|default('80') }};

                {% if NGINX_ENABLE_SSL|default('false') == 'true' %}
                    return 301 {{ NGINX_CANONICAL_SCHEME|default('https') }}://{{ NGINX_SERVER_NAME }}$request_uri;
                {% else %}
                    return 301 {{ NGINX_CANONICAL_SCHEME|default('http') }}://{{ NGINX_SERVER_NAME }}$request_uri;
                {% endif %}
            }

            {% if NGINX_ENABLE_SSL|default('false') == 'true' %}
                server {
                    server_name {{ hostname }};

                    listen {{ NGINX_HTTPS_PORT|default('443') }} ssl http2;
                    listen [::]:{{ NGINX_HTTPS_PORT|default('443') }} ssl http2;

                    ssl_dhparam  /etc/nginx/ssl/dhparam.pem;
                    ssl_session_cache  builtin:1000  shared:SSL:10m;
                    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
                    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
                    ssl_prefer_server_ciphers on;

                    ssl_certificate {{ NGINX_SSL_CERT|default('/etc/nginx/ssl/self-signed.crt') }};
                    ssl_certificate_key {{ NGINX_SSL_CERT_KEY|default('/etc/nginx/ssl/self-signed.key') }};

                    return 301 https://{{ NGINX_SERVER_NAME }}$request_uri;
                }
            {% endif %}
        {% endfor %}
    {% endif %}

{% endif %}

server {
    server_name {{ NGINX_SERVER_NAME|default('_') }};

    {% if NGINX_ENABLE_SSL|default('false') == 'true' %}
      listen {{ NGINX_HTTPS_PORT|default('443') }} ssl http2;
      listen [::]:{{ NGINX_HTTPS_PORT|default('443') }} ssl http2;

      ssl_dhparam  /etc/nginx/ssl/dhparam.pem;
      ssl_session_cache  builtin:1000  shared:SSL:10m;
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
      ssl_prefer_server_ciphers on;

      ssl_certificate {{ NGINX_SSL_CERT|default('/etc/nginx/ssl/self-signed.crt') }};
      ssl_certificate_key {{ NGINX_SSL_CERT_KEY|default('/etc/nginx/ssl/self-signed.key') }};
    {% else %}
      listen {{ NGINX_HTTP_PORT|default('80') }};
      listen [::]:{{ NGINX_HTTP_PORT|default('80') }};
    {% endif %}

    port_in_redirect {{ NGINX_PORT_IN_REDIRECT|default('on') }};
    absolute_redirect {{ NGINX_ABSOLUTE_REDIRECT|default('on') }};

    root /var/www/html;

    index index.php index.html index.htm;

    charset utf-8;

    {% if NGINX_NOINDEX|default('false') == 'true' %}
      add_header  X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
    {% endif %}

    # Remove index.php from root URI
    if ($request_uri ~* "^/index\.php$") {
        return 301 /;
    }

    {% if NGINX_ENABLE_FASTCGI_CACHE|default('false') == 'true' %}
        set $no_cache 0;
        set $hide_header Set-Cookie;
    {% endif %}

    include /etc/nginx/imported/partials/server/*;

    {% if NGINX_TRAILING_SLASH|default('') == 'ensure' %}
        # Ensure trailing slashes
        if ($request_method = GET) {
            rewrite ^([^.]*[^/])$ $1/ permanent;
        }
    {% elif NGINX_TRAILING_SLASH|default('') == 'remove' %}
        # Remove any trailing slashes
        if ($request_method = GET) {
            rewrite ^/(.*)/$ /$1 permanent;
        }
    {% endif %}

    location {{ NGINX_LOCATION|default('/') }} {
        # Remove index.php from URL
        rewrite ^(/index\.php)(.*) $2 permanent;

        try_files $uri $uri/ {{ NGINX_LOCATION|default('/') }}index.php?$query_string;

        {% if NGINX_ENABLE_AUTH|default('true') == 'true' %}
            satisfy any;
            {% set auth_whitelist = NGINX_AUTH_WHITELIST|default('') %}
            {% if auth_whitelist %}
                {% for ip in auth_whitelist.split(',') %}
                    allow {{ ip }};
                {% endfor %}
            {% endif %}
            deny all;

            auth_basic "Staging Server"; #For Basic Auth
            auth_basic_user_file /etc/nginx/imported/auth/.htpasswd; #For Basic Auth
        {% endif %}

        include /etc/nginx/imported/partials/location/*;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt { access_log off; log_not_found off; }

    error_page 404 {{ NGINX_LOCATION|default('/') }}index.php;

    {% if NGINX_ENABLE_ACCESS_LOG|default('false') == 'true' %}
        access_log {{ NGINX_ACCESS_LOG_LOCATION|default('/var/log/nginx/access.log') }} main;
    {% endif %}

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_pass 127.0.0.1:9000;

        {% if NGINX_ENABLE_FASTCGI_CACHE|default('false') == 'true' %}
            # FastCGI Cache settings
            add_header X-Cache $upstream_cache_status;
            fastcgi_cache_bypass $no_cache;
            fastcgi_no_cache $no_cache;
            fastcgi_cache_key "$scheme$request_method$host$request_uri";
            fastcgi_cache_methods GET HEAD;
            fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
            fastcgi_cache APPCACHE;
            fastcgi_hide_header $hide_header;
            fastcgi_cache_valid 200 {{ NGINX_CACHE_TTL|default('10m') }};
            fastcgi_cache_lock on;
            fastcgi_cache_use_stale updating error timeout invalid_header http_500;
        {% endif %}
    }

    location ~ /\.ht {
        deny all;
    }
}

include /etc/nginx/imported/partials/after/*;
